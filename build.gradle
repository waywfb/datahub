buildscript {
  ext.junitJupiterVersion = '5.6.1'
  // Releases: https://github.com/linkedin/rest.li/blob/master/CHANGELOG.md
  ext.pegasusVersion = '29.45.0'
  ext.mavenVersion = '3.6.3'
  ext.springVersion = '5.3.29'
  ext.springBootVersion = '2.7.14'
  ext.openTelemetryVersion = '1.18.0'
  ext.neo4jVersion = '4.4.9'
  ext.testContainersVersion = '1.17.4'
  ext.elasticsearchVersion = '2.9.0' // ES 7.10, Opensearch 1.x, 2.x
  ext.jacksonVersion = '2.15.2'
  ext.jettyVersion = '9.4.46.v20220331'
  ext.playVersion = '2.8.18'
  ext.log4jVersion = '2.19.0'
  ext.slf4jVersion = '1.7.36'
  ext.logbackClassic = '1.2.12'
  ext.hadoop3Version = '3.3.5'
  ext.kafkaVersion = '2.3.0'
  ext.hazelcastVersion = '5.3.1'
  ext.ebeanVersion = '12.16.1'

  ext.docker_registry = 'linkedin'

  apply from: './repositories.gradle'
  buildscript.repositories.addAll(project.repositories)
  dependencies {
    classpath 'com.linkedin.pegasus:gradle-plugins:' + pegasusVersion
    classpath 'com.github.node-gradle:gradle-node-plugin:2.2.4'
    classpath 'io.acryl.gradle.plugin:gradle-avro-plugin:0.8.1'
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:' + springBootVersion
    classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
    classpath "com.palantir.gradle.gitversion:gradle-git-version:3.0.0"
    classpath "org.gradle.playframework:gradle-playframework:0.14"
    classpath "gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.19.1"
  }
}

plugins {
  id 'com.gorylenko.gradle-git-properties' version '2.4.0-rc2'
  id 'com.github.johnrengelman.shadow' version '6.1.0'
  id 'com.palantir.docker' version '0.35.0'
  // https://blog.ltgt.net/javax-jakarta-mess-and-gradle-solution/
  // TODO id "org.gradlex.java-ecosystem-capabilities" version "1.0"
}

apply from: "gradle/docker/docker.gradle"

project.ext.spec = [
    'product' : [
        'pegasus' : [
            'd2' : 'com.linkedin.pegasus:d2:' + pegasusVersion,
            'data' : 'com.linkedin.pegasus:data:' + pegasusVersion,
            'dataAvro1_6' : 'com.linkedin.pegasus:data-avro-1_6:' + pegasusVersion,
            'generator': 'com.linkedin.pegasus:generator:' + pegasusVersion,
            'restliCommon' : 'com.linkedin.pegasus:restli-common:' + pegasusVersion,
            'restliClient' : 'com.linkedin.pegasus:restli-client:' + pegasusVersion,
            'restliDocgen' : 'com.linkedin.pegasus:restli-docgen:' + pegasusVersion,
            'restliServer' : 'com.linkedin.pegasus:restli-server:' + pegasusVersion,
            'restliSpringBridge': 'com.linkedin.pegasus:restli-spring-bridge:' + pegasusVersion,
        ]
    ]
]

project.ext.externalDependency = [
    'akkaHttp': 'com.typesafe.akka:akka-http-core_2.12:10.2.10',
    'antlr4Runtime': 'org.antlr:antlr4-runtime:4.7.2',
    'antlr4': 'org.antlr:antlr4:4.7.2',
    'assertJ': 'org.assertj:assertj-core:3.11.1',
    'avro_1_7': 'org.apache.avro:avro:1.7.7',
    'avroCompiler_1_7': 'org.apache.avro:avro-compiler:1.7.7',
    'awsGlueSchemaRegistrySerde': 'software.amazon.glue:schema-registry-serde:1.1.10',
    'awsMskIamAuth': 'software.amazon.msk:aws-msk-iam-auth:1.1.1',
    'awsSecretsManagerJdbc': 'com.amazonaws.secretsmanager:aws-secretsmanager-jdbc:1.0.8',
    'awsPostgresIamAuth': 'software.amazon.jdbc:aws-advanced-jdbc-wrapper:1.0.0',
    'awsRds':'software.amazon.awssdk:rds:2.18.24',
    'cacheApi' : 'javax.cache:cache-api:1.1.0',
    'commonsCli': 'commons-cli:commons-cli:1.5.0',
    'commonsIo': 'commons-io:commons-io:2.4',
    'commonsLang': 'commons-lang:commons-lang:2.6',
    'commonsText': 'org.apache.commons:commons-text:1.10.0',
    'commonsCollections': 'commons-collections:commons-collections:3.2.2',
    'data' : 'com.linkedin.pegasus:data:' + pegasusVersion,
    'datastaxOssNativeProtocol': 'com.datastax.oss:native-protocol:1.5.1',
    'datastaxOssCore': 'com.datastax.oss:java-driver-core:4.14.1',
    'datastaxOssQueryBuilder': 'com.datastax.oss:java-driver-query-builder:4.14.1',
    'dgraph4j' : 'io.dgraph:dgraph4j:21.03.1',
    'dropwizardMetricsCore': 'io.dropwizard.metrics:metrics-core:4.2.3',
    'dropwizardMetricsJmx': 'io.dropwizard.metrics:metrics-jmx:4.2.3',
    'ebean': 'io.ebean:ebean:' + ebeanVersion,
    'ebeanAgent': 'io.ebean:ebean-agent:' + ebeanVersion,
    'ebeanDdl': 'io.ebean:ebean-ddl-generator:' + ebeanVersion,
    'elasticSearchRest': 'org.opensearch.client:opensearch-rest-high-level-client:' + elasticsearchVersion,
    'elasticSearchJava': 'org.opensearch.client:opensearch-java:2.6.0',
    'findbugsAnnotations': 'com.google.code.findbugs:annotations:3.0.1',
    'graphqlJava': 'com.graphql-java:graphql-java:19.5',
    'graphqlJavaScalars': 'com.graphql-java:graphql-java-extended-scalars:19.1',
    'gson': 'com.google.code.gson:gson:2.8.9',
    'guice': 'com.google.inject:guice:4.2.3',
    'guava': 'com.google.guava:guava:32.1.2-jre',
    'h2': 'com.h2database:h2:2.2.224',
    'hadoopCommon':'org.apache.hadoop:hadoop-common:2.7.2',
    'hadoopMapreduceClient':'org.apache.hadoop:hadoop-mapreduce-client-core:2.7.2',
    "hadoopClient": "org.apache.hadoop:hadoop-client:$hadoop3Version",
    "hadoopCommon3":"org.apache.hadoop:hadoop-common:$hadoop3Version",
    'hazelcast':"com.hazelcast:hazelcast:$hazelcastVersion",
    'hazelcastSpring':"com.hazelcast:hazelcast-spring:$hazelcastVersion",
    'hazelcastTest':"com.hazelcast:hazelcast:$hazelcastVersion:tests",
    'hibernateCore': 'org.hibernate:hibernate-core:5.2.16.Final',
    'httpClient': 'org.apache.httpcomponents:httpclient:4.5.9',
    'httpAsyncClient': 'org.apache.httpcomponents:httpasyncclient:4.1.5',
    'iStackCommons': 'com.sun.istack:istack-commons-runtime:4.0.1',
    'jacksonJDK8': "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion",
    'jacksonDataPropertyFormat': "com.fasterxml.jackson.dataformat:jackson-dataformat-properties:$jacksonVersion",
    'jacksonCore': "com.fasterxml.jackson.core:jackson-core:$jacksonVersion",
    'jacksonDataBind': "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
    'jacksonDataFormatYaml': "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion",
    'woodstoxCore': 'com.fasterxml.woodstox:woodstox-core:6.4.0',
    'javatuples': 'org.javatuples:javatuples:1.2',
    'javaxInject' : 'javax.inject:javax.inject:1',
    'javaxValidation' : 'javax.validation:validation-api:2.0.1.Final',
    'jerseyCore': 'org.glassfish.jersey.core:jersey-client:2.25.1',
    'jerseyGuava': 'org.glassfish.jersey.bundles.repackaged:jersey-guava:2.25.1',
    'jettyJaas': "org.eclipse.jetty:jetty-jaas:$jettyVersion",
    'jettyClient': "org.eclipse.jetty:jetty-client:$jettyVersion",
    'jettison': 'org.codehaus.jettison:jettison:1.5.4',
    'jgrapht': 'org.jgrapht:jgrapht-core:1.5.1',
    'jna': 'net.java.dev.jna:jna:5.12.1',
    'jsonPatch': 'com.github.java-json-tools:json-patch:1.13',
    'jsonSchemaAvro': 'com.github.fge:json-schema-avro:0.1.4',
    'jsonSimple': 'com.googlecode.json-simple:json-simple:1.1.1',
    'jsonSmart': 'net.minidev:json-smart:2.4.9',
    'json': 'org.json:json:20230227',
    'junit': 'junit:junit:4.13.2',
    'junitJupiterApi': "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion",
    'junitJupiterParams': "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion",
    'junitJupiterEngine': "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion",
    // avro-serde includes dependencies for `kafka-avro-serializer` `kafka-schema-registry-client` and `avro`
    'kafkaAvroSerde': 'io.confluent:kafka-streams-avro-serde:5.5.1',
    'kafkaAvroSerializer': 'io.confluent:kafka-avro-serializer:5.1.4',
    'kafkaClients': "org.apache.kafka:kafka-clients:$kafkaVersion",
    'snappy': 'org.xerial.snappy:snappy-java:1.1.10.3',
    'logbackClassic': "ch.qos.logback:logback-classic:$logbackClassic",
    'slf4jApi': "org.slf4j:slf4j-api:$slf4jVersion",
    'log4jCore': "org.apache.logging.log4j:log4j-core:$log4jVersion",
    'log4jApi': "org.apache.logging.log4j:log4j-api:$log4jVersion",
    'log4j12Api': "org.slf4j:log4j-over-slf4j:$slf4jVersion",
    'log4j2Api': "org.apache.logging.log4j:log4j-to-slf4j:$log4jVersion",
    'lombok': 'org.projectlombok:lombok:1.18.22',
    'mariadbConnector': 'org.mariadb.jdbc:mariadb-java-client:2.6.0',
    'mavenArtifact': "org.apache.maven:maven-artifact:$mavenVersion",
    'mixpanel': 'com.mixpanel:mixpanel-java:1.4.4',
    'mockito': 'org.mockito:mockito-core:3.0.0',
    'mockitoInline': 'org.mockito:mockito-inline:3.0.0',
    'mockServer': 'org.mock-server:mockserver-netty:5.11.2',
    'mockServerClient': 'org.mock-server:mockserver-client-java:5.11.2',
    'mysqlConnector': 'mysql:mysql-connector-java:8.0.20',
    'neo4jHarness': 'org.neo4j.test:neo4j-harness:' + neo4jVersion,
    'neo4jJavaDriver': 'org.neo4j.driver:neo4j-java-driver:' + neo4jVersion,
    'opentelemetryApi': 'io.opentelemetry:opentelemetry-api:' + openTelemetryVersion,
    'opentelemetryAnnotations': 'io.opentelemetry:opentelemetry-extension-annotations:' + openTelemetryVersion,
    'opentracingJdbc':'io.opentracing.contrib:opentracing-jdbc:0.2.15',
    'parquet': 'org.apache.parquet:parquet-avro:1.12.3',
    'picocli': 'info.picocli:picocli:4.5.0',
    'playCache': "com.typesafe.play:play-cache_2.12:$playVersion",
    'playWs': 'com.typesafe.play:play-ahc-ws-standalone_2.12:2.1.10',
    'playDocs': "com.typesafe.play:play-docs_2.12:$playVersion",
    'playGuice': "com.typesafe.play:play-guice_2.12:$playVersion",
    'playJavaJdbc': "com.typesafe.play:play-java-jdbc_2.12:$playVersion",
    'playAkkaHttpServer': "com.typesafe.play:play-akka-http-server_2.12:$playVersion",
    'playServer': "com.typesafe.play:play-server_2.12:$playVersion",
    'playTest': "com.typesafe.play:play-test_2.12:$playVersion",
    'playFilters': "com.typesafe.play:filters-helpers_2.12:$playVersion",
    'pac4j': 'org.pac4j:pac4j-oidc:4.5.7',
    'playPac4j': 'org.pac4j:play-pac4j_2.12:9.0.2',
    'postgresql': 'org.postgresql:postgresql:42.3.8',
    'protobuf': 'com.google.protobuf:protobuf-java:3.19.6',
    'rangerCommons': 'org.apache.ranger:ranger-plugins-common:2.3.0',
    'reflections': 'org.reflections:reflections:0.9.9',
    'resilience4j': 'io.github.resilience4j:resilience4j-retry:1.7.1',
    'rythmEngine': 'org.rythmengine:rythm-engine:1.3.0',
    'servletApi': 'javax.servlet:javax.servlet-api:3.1.0',
    'shiroCore': 'org.apache.shiro:shiro-core:1.11.0',
    'snakeYaml': 'org.yaml:snakeyaml:2.0',
    'sparkSql' : 'org.apache.spark:spark-sql_2.11:2.4.8',
    'sparkHive' : 'org.apache.spark:spark-hive_2.11:2.4.8',
    'springBeans': "org.springframework:spring-beans:$springVersion",
    'springContext': "org.springframework:spring-context:$springVersion",
    'springCore': "org.springframework:spring-core:$springVersion",
    'springDocUI': 'org.springdoc:springdoc-openapi-ui:1.6.14',
    'springJdbc': "org.springframework:spring-jdbc:$springVersion",
    'springWeb': "org.springframework:spring-web:$springVersion",
    'springWebMVC': "org.springframework:spring-webmvc:$springVersion",
    'springBootTest': "org.springframework.boot:spring-boot-starter-test:$springBootVersion",
    'springBoot': "org.springframework.boot:spring-boot:$springBootVersion",
    'springBootAutoconfigure': "org.springframework.boot:spring-boot-autoconfigure:$springBootVersion",
    'springBootStarterWeb': "org.springframework.boot:spring-boot-starter-web:$springBootVersion",
    'springBootStarterJetty': "org.springframework.boot:spring-boot-starter-jetty:$springBootVersion",
    'springBootStarterCache': "org.springframework.boot:spring-boot-starter-cache:$springBootVersion",
    'springBootStarterValidation': "org.springframework.boot:spring-boot-starter-validation:$springBootVersion",
    'springKafka': 'org.springframework.kafka:spring-kafka:2.8.11',
    'springActuator': "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion",
    'swaggerAnnotations': 'io.swagger.core.v3:swagger-annotations:2.1.12',
    'swaggerCli': 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.41',
    'testngJava8': 'org.testng:testng:7.5.1',
    'testng': 'org.testng:testng:7.8.0',
    'testContainers': 'org.testcontainers:testcontainers:' + testContainersVersion,
    'testContainersJunit': 'org.testcontainers:junit-jupiter:' + testContainersVersion,
    'testContainersPostgresql':'org.testcontainers:postgresql:' + testContainersVersion,
    'testContainersElasticsearch': 'org.testcontainers:elasticsearch:' + testContainersVersion,
    'testContainersCassandra': 'org.testcontainers:cassandra:' + testContainersVersion,
    'testContainersKafka': 'org.testcontainers:kafka:' + testContainersVersion,
    'testContainersOpenSearch': 'org.opensearch:opensearch-testcontainers:2.0.0',
    'typesafeConfig':'com.typesafe:config:1.4.1',
    'wiremock':'com.github.tomakehurst:wiremock:2.10.0',
    'zookeeper': 'org.apache.zookeeper:zookeeper:3.4.14',
    'wire': 'com.squareup.wire:wire-compiler:3.7.1',
    'charle':  'com.charleskorn.kaml:kaml:0.53.0',
    'common': 'commons-io:commons-io:2.7',
    'jline':'jline:jline:1.4.1',
    'jetbrains':' org.jetbrains.kotlin:kotlin-stdlib:1.6.0'
    
]

allprojects {
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  apply plugin: 'checkstyle'
  // apply plugin: 'org.gradlex.java-ecosystem-capabilities'
}

configure(subprojects.findAll {! it.name.startsWith('spark-lineage')}) {

  configurations.all {
    exclude group: "io.netty", module: "netty"
    exclude group: "log4j", module: "log4j"
    exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    exclude group: "com.vaadin.external.google", module: "android-json"
    exclude group: "org.slf4j", module: "slf4j-reload4j"
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "org.slf4j", module: "slf4j-nop"
    exclude group: "org.slf4j", module: "slf4j-ext"
  }
}

subprojects {

  apply plugin: 'maven-publish'
  apply plugin: 'com.gorylenko.gradle-git-properties'

  gitProperties {
    keys = ['git.commit.id','git.commit.id.describe','git.commit.time']
    // using any tags (not limited to annotated tags) for "git.commit.id.describe" property
    // see http://ajoberstar.org/grgit/grgit-describe.html for more info about the describe method and available parameters
    // 'it' is an instance of org.ajoberstar.grgit.Grgit
    customProperty 'git.commit.id.describe', { it.describe(tags: true) }
    failOnNoGitDirectory = false
  }

  plugins.withType(JavaPlugin) {
    dependencies {
      constraints {
        implementation('io.netty:netty-all:4.1.86.Final')
        implementation('org.apache.commons:commons-compress:1.21')
        implementation('org.apache.velocity:velocity-engine-core:2.3')
        implementation('org.hibernate:hibernate-validator:6.0.20.Final')
        implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
        implementation("com.fasterxml.jackson.core:jackson-dataformat-cbor:$jacksonVersion")
      }
    }

    checkstyle {
      configDirectory = file("${project.rootDir}/gradle/checkstyle")
      sourceSets = [ getProject().sourceSets.main, getProject().sourceSets.test ]
      toolVersion = "8.0"
      maxWarnings = 0
      ignoreFailures = false
    }
  }

  tasks.withType(JavaCompile).configureEach {
    javaCompiler = javaToolchains.compilerFor {
      languageVersion = JavaLanguageVersion.of(11)
    }
  }
  tasks.withType(Test).configureEach {
    javaLauncher = javaToolchains.launcherFor {
      languageVersion = JavaLanguageVersion.of(11)
    }
    // https://docs.gradle.org/current/userguide/performance.html
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1

    if (project.configurations.getByName("testImplementation").getDependencies()
            .any{ it.getName() == "testng" }) {
      useTestNG()
    }
  }

  afterEvaluate {
    if (project.plugins.hasPlugin('pegasus')) {
      dependencies {
        dataTemplateCompile spec.product.pegasus.data
        restClientCompile spec.product.pegasus.restliClient
      }
    }
  }
}
